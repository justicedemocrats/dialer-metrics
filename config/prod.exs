use Mix.Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# LivevoxWeb.Endpoint.init/2 when load_from_system_env is
# true. Any dynamic configuration should be done there.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you typically run after static files are built.
config :livevox, LivevoxWeb.Endpoint,
  load_from_system_env: true,
  url: [host: "jd-livevox.gigalixirapp.com", port: 80],
  server: true

# Do not print debug messages in production
config :logger,
  level: :info,
  backends: [:console, Rollbax.Logger]

config :livevox,
  access_token: "${LIVEVOX_ACCESS_TOKEN}",
  clientname: "${LIVEVOX_CLIENT_NAME}",
  username: "${LIVEVOX_USERNAME}",
  password: "${LIVEVOX_PASSWORD}",
  data_dog_api_key: "${DATA_DOG_API_KEY}",
  data_dog_application_key: "${DATA_DOG_APP_KEY}",
  airtable_key: "${AIRTABLE_KEY}",
  airtable_base: "${AIRTABLE_BASE}",
  airtable_table_name: "${AIRTABLE_TABLE_NAME}",
  mongodb_username: "${MONGO_USERNAME}",
  mongodb_hostname: "${MONGO_HOSTNAME}",
  mongodb_password: "${MONGO_PASSWORD}",
  mongodb_port: "${MONGO_PORT}",
  login_management_url: "${LOGIN_MANAGEMENT_URL}",
  test: false

config :rollbax,
  access_token: "${ROLLBAR_ACCESS_TOKEN}",
  environment: "production"
